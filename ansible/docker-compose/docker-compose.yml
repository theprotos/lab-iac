version: '3.8'

networks:
  net1:
    ipam:
      config:
        - subnet: 10.11.0.0/24
volumes:
  ssh-key:

services:

  ansible:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.ansible
    image: ansible
    container_name: ansible
    volumes:
      - ssh-key:/tmp/ansible:ro
    deploy:
      replicas: 1
    ports:
      - '22'
      - '8000:8000'
    restart: always
    networks:
      net1:
        ipv4_address: 10.11.0.2
    command: sh -c "
                    tail -f /dev/null
                   "

  node-ubuntu:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.ubuntu
    image: node-ubuntu
    container_name: node-ubuntu
    volumes:
      - ssh-key:/tmp/ansible:ro
    deploy:
      replicas: 1
    ports:
      - '22'
    restart: always
    networks:
      net1:
        ipv4_address: 10.11.0.3

  node-redhat:
    privileged: true
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.redhat
    image: node-redhat
    container_name: node-redhat
    volumes:
      - ssh-key:/tmp/ansible/
    deploy:
      replicas: 1
    ports:
      - '22'
    restart: always
    networks:
      net1:
        ipv4_address: 10.11.0.4
    command: sh -c "
                    tail -f /dev/null
                   "

  node-alpine:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.alpine
    image: node-alpine
    container_name: node-alpine
    volumes:
      - ssh-key:/tmp/ansible:ro
    deploy:
      replicas: 1
    ports:
      - '22'
    restart: always
    networks:
      net1:
        ipv4_address: 10.11.0.5

  node-rockylinux:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.rockylinux
    image: node-rockylinux
    container_name: node-rockylinux
    volumes:
      - ssh-key:/tmp/ansible/
    deploy:
      replicas: 1
    ports:
      - '22'
    restart: always
    networks:
      net1:
        ipv4_address: 10.11.0.6
